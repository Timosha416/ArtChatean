@using ArtChatean.Models;
@*

*@
@model User
@{
    Layout = "_MainLayout";
}


<div class="profile-header">
    @if (Model.Image != null && Model.Image.Length > 0)
    {
        <img id="image-preview" class="image-placeholder" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Image)" alt="Profile Image" />
    }
    else
    {
        <img id="image-preview" class="image-placeholder" src="#" alt="Profile Image" style="display:none;" />
    }
    
        <div class="fullname">
            <h1>@Model.FullName</h1>
        </div>
        <div class="edit-button">
            <button class="edit-profile" onclick="window.location.href='/Main/Setting';">Edit profile</button>
            @* <button class="add-profile" onclick="window.location.href='/Main/AddPicture';">Add Picture</button> *@
        <button class="add-profile" onclick="openModal()">Add Post</button>
        </div>
    <div class="profile-stats">
        <div class="stat">
            <span class="stat-label">Total Likes</span>
            <span class="stat-value">@ViewBag.TotalLikes</span>
        </div>
        <div class="stat">
            <span class="stat-label">Followers</span>
            <span class="stat-value">@ViewBag.FriendCount</span>
        </div>
        <div class="stat">
            <span class="stat-label">Top Rank</span>
            <span class="stat-value">№ @ViewBag.Rank</span>
        </div>
    </div>
 
</div>

<div id="uploadModal" class="modal" onclick="closeModalOnClickOutside(this)">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Create new post</h2>
        <div class="upload-area" id="uploadArea">
            <p>Drag photos and videos here</p>
            <img id="image-preview-modal" />           
            <button class="uploadButton" onclick="triggerFileInput()">Select from computer</button>
                <input type="file" name="Image" id="fileInput" style="display: none;" onchange="previewImage(event)" />
        </div>
        <div class="caption-area">
            <label for="captionInput">Caption:</label>
            <input type="text" id="captionInput" name="Caption" placeholder="Enter caption here" />
        </div>
        <button type="submit" class="saveButton" style="display: none;" onclick="saveImage()">Save to Gallery</button>
    </div>
</div>

<div class="profile-gallery">
    @if (Model.Pictures != null && Model.Pictures.Any())
    {
        @foreach (var picture in Model.Pictures)
        {
            <div class="gallery-item" id="picture-@picture.Id">
                @if (picture.Image != null && picture.Image.Length > 0)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(picture.Image)" alt="@picture.Subject" />
                }
                else
                {
                    <img src="#" alt="" />
                }
                <div class="overlay picture-link" data-id="@picture.Id" data-user-id="@picture.UserId">
                    <div class="icon publish-icon"
                         title="@(picture.IsForSale ? "Remove from sale" : "Sale picture")"
                         data-id="@picture.Id"
                         onclick="salePicture(this)">
                        @if (picture.IsForSale)
                        {
                            <i class="fas fa-check"></i>
                        }
                        else
                        {
                            <i class="fas fa-upload"></i>
                        }
                    </div>
                    <div class="icon delete-icon" title="Delete" data-id="@picture.Id" onclick="deletePicture(this)">
                        <i class="fas fa-trash"></i>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No pictures available.</p>
    }
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const images = document.querySelectorAll('.picture-link');
        images.forEach(img => {
            img.addEventListener('click', function () {
                const pictureId = this.getAttribute('data-id');
                const userId = this.getAttribute('data-user-id');
                window.location.href = `/Main/FriendMain/${userId}?pictureId=${pictureId}`;
            });
        });
    });
    document.addEventListener('DOMContentLoaded', function () {
        var urlParams = new URLSearchParams(window.location.search);
        var showModal = urlParams.get('modal');

        if (showModal === 'true') {
            openModal();
        }
    });
    function deletePicture(element) {
        var pictureId = element.getAttribute('data-id');
        var confirmed = confirm("Are you sure you want to delete this picture?");
        if (confirmed) {
            fetch('/Main/DeletePicture', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: pictureId
            })
                .then(response => {
                    if (response.ok) {
                        document.getElementById('picture-' + pictureId).remove();
                    } else {
                        alert("Failed to delete picture.");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred.");
                });
        }
        event.stopPropagation();
    }
    function salePicture(element) {
        var pictureId = element.getAttribute('data-id');

        fetch('/Main/SalePicture', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: pictureId
        })
            .then(response => {
                if (response.ok) {
                    var icon = element.querySelector('i');
                    if (icon.classList.contains('fa-upload')) {
                        icon.classList.remove('fa-upload');
                        icon.classList.add('fa-check');
                        element.setAttribute('title', 'Remove from sale');
                    } else {
                        icon.classList.remove('fa-check');
                        icon.classList.add('fa-upload');
                        element.setAttribute('title', 'Add to sale');
                    }
                } else {
                    alert("Failed to change sale status.");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert("An error occurred.");
            });

        event.stopPropagation();
    }

    // МОДАЛЬНЕ ВІКНО
    // Функція для відкриття модального вікна
    function openModal() {
        document.getElementById("uploadModal").style.display = "block";
    }

    // Функція для закриття модального вікна
    function closeModal() {
        document.getElementById("uploadModal").style.display = "none";
    }

    // Функція для збереження зображення в галерею
    function saveImage() {
        var fileInput = document.getElementById('fileInput');
        var captionInput = document.getElementById('captionInput');
        var file = fileInput.files[0];
        var caption = captionInput.value;

        if (file) {
            var formData = new FormData();
            formData.append("Image", file); 
            formData.append("Caption", caption);  
            fetch('/Main/AddPicture', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {                        
                        console.log("Зображення збережено.");
                        closeModal(); 
                        window.location.href = "/Main/Profile/";
                    } else {
                        return response.text().then(text => {
                            throw new Error(text);
                        });
                    }
                })
                .catch(error => {
                    console.error("Помилка при збереженні зображення:", error);
                    alert("Помилка при збереженні зображення: " + error.message);
                });            
        } else {
            alert("Будь ласка, виберіть зображення.");
        }
               
    }

    // Функція для попереднього перегляду зображення
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('image-preview-modal');
            output.src = reader.result;
            output.style.display = 'block';
            document.querySelector('.saveButton').style.display = 'block';
        };
        reader.readAsDataURL(event.target.files[0]);
    }

    // Функція для виклику вибору файлу
    function triggerFileInput() {
        document.getElementById("fileInput").click();
    }

    // // Закриття модального вікна при кліку поза його межами
    // function closeModalOnClickOutside(event) {
    //     const modal = document.getElementById("uploadModal");
    //     if (event.target == modal) {
    //         closeModal();
    //     }
    // }
    // Коли користувач натискає будь-де поза модальним вікном, воно також закривається
    window.onclick = function (event) {
        const modal = document.getElementById("uploadModal");
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>


@section HeadEnd {
    <style>
        .main {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        /* ВЕРХ ПРОФАЙЛА */
        .profile-header {
            width: 50%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;            
            margin-top: 20px;
            gap: 20px;
        }

        /* ФОТО */
        .image-placeholder {
            width: 120px;
            height: 120px;
            border: 2px solid white;
            border-radius: 50%;
            object-fit: cover;
            display: block;
        }

        .fullname h1 {
            margin: 0;
            font-size: 24px;
        }

        /* КНОПКИ */
        .edit-button {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
        }            

        .edit-profile,
        .add-profile {
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            background-color: white;
        }
        /* СТАТИСТИКА */
        .profile-stats {
            display: flex;
            flex-direction: row;
            gap: 20px;
        }

        .stat {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center; 
        }

        .stat-label{
            font-weight: bold;
        }
        .stat-value {
            display: block;
        }

        /* ГАЛЕРЕЯ */
        .profile-gallery {
            display: flex;
            width: 90%;
            flex-wrap: wrap;
            justify-content: left;
            gap: 10px;
            margin: 20px 0 20px 0;
        }

        .gallery-item {
            width: calc(33.333% - 10px);
            box-sizing: border-box;
            position: relative;
            aspect-ratio: 1 / 1;
        }

            .gallery-item img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                display: block;
                border: 2px solid white;
            }
        /* НАВЕДЕННЯ НА КАРТИНУ */
        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
            padding: 10px;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
            box-sizing: border-box;
            cursor: pointer;
        }

        .gallery-item:hover .overlay {
            opacity: 1;
        }

        .fa-trash,
        .fa-check,
        .fa-upload {
            color: white;
            font-size: 20px;
            text-decoration: none;
            background: rgba(0, 0, 0, 0.7);
            padding: 10px;
            cursor: pointer;
            border-radius: 50%;
            transition: background 0.3s ease-in-out;
        }

            .fa-trash:hover {
                background: rgba(255, 0, 0, 0.7); /* Red for like icon on hover */
            }

            .fa-check:hover {
                background: rgba(0, 255, 0, 0.7); /* Green for buy icon on hover */
            }

            .fa-upload:hover {
                background: rgba(0, 255, 0, 0.7); /* Green for buy icon on hover */
            }   

        /* МОДАЛЬНЕ ВІКНО */
        .modal {
            display: none; /* Модальне вікно приховане за замовчуванням */
            position: fixed; /* Фіксована позиція на екрані */
            z-index: 1000; /* Вікно завжди буде зверху */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
        }

        /* Стиль для вмісту модального вікна */
        .modal-content {
            background-color: black;
            margin: 10% auto; 
            padding: 20px;
            border: 2px solid white;
            width: 50%;
            border-radius: 10px;
            text-align: center;
        }

        /* Кнопка закриття модального вікна */
        .close {
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        /* Стиль для області завантаження */
        .upload-area {
            max-width: 100%; /* Ширина до 100% контейнера */
            display:flex;
            flex-direction:column;
            align-items: center;
            border: 2px solid white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            transition: background-color 0.3s ease;
        }

        /* Іконка завантаження */
        .upload-icon {
            width: 80px;
            height: 80px;
            margin-bottom: 10px;
        }

        /* Стиль для попереднього перегляду зображення */
        #image-preview-modal {
            max-width: 100%;
            height: auto;
            min-height: 200px;
            border-radius: 10px;
            margin-top: 15px;
        }

        .uploadButton {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }

        .uploadButton:hover {
                background-color: #0056b3;
            }

        /*  ОПИС */
        .caption-area {
            margin-top: 15px;
        }

            .caption-area label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .caption-area input {
                width: 100%;
                padding: 10px;
                border: 1px solid white;
                border-radius: 4px;
                box-sizing: border-box; 
                border-color: whire;
            }
        
        .saveButton {
            background-color: #28a745;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
        }

            .saveButton:hover {
                background-color: #218838;
            }
    </style>
}

